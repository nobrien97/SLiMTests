// set up a simple neutral simulation
initialize() {
	setSeed(123);
	initializeSLiMModelType("nonWF");
	initializeMutationRate(1e-7);
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	m1.convertToSubstitution = T;
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, 99999);
	initializeRecombinationRate(1e-8);
	
	defineConstant("N", 500);
}

// create a population of 500 individuals, set up empty p2
1 early() {
	sim.addSubpop("p1", N);
	sim.addSubpop("p2", 0);
}

// Max age = 0
survival() {
	return (individual.age == 0);
}


reproduction() {
	// p2: clone some of p1 at generation 1001
	if (sim.cycle == 1001) {
		for (ind in p1.sampleIndividuals(integerDiv(N,2))) {
			p2.addCloned(ind);
		}
	}
	
	// p1: replicate WF model
	inds = p1.individuals;
	parent1 = sample(inds, N, replace = T);
	parent2 = sample(inds, N, replace = T);
	
	for (i in seqLen(N))
		p1.addCrossed(parent1[i], parent2[i]);
	
	self.active = 0;
}


// Output frequency of first mut in p1
1000 late() {
	catn(paste("Frequency:", p1.genomes.mutationFrequenciesInGenomes(sim.mutations[0])));
}

// Crash
1001 late() {
	catn(paste("Frequency:", p1.genomes.mutationFrequenciesInGenomes(sim.mutations[0])));	
}
